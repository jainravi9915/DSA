Problem Link -> https://practice.geeksforgeeks.org/problems/diameter-of-binary-tree/1

  
int height(Node* root,int &ans){
    if(root==NULL)return 0;
    int l=height(root->left,ans);
    int r=height(root->right,ans);
    ans=max(ans,l+r+1);
    return 1+max(l,r);
}

int diameter(Node* root) {
    if(root==NULL)return 0;
    int ans=0;
    height(root,ans);
    return ans;
}
// Explanation-> Diameter longest path between two nodes. i,.e max of for each nodes left_height+right_height+1; 
// Time Complexity  -> O(N)
// Space Complexity -> O(N)