// problem Link -> https://practice.geeksforgeeks.org/problems/reverse-level-order-traversal/1
vector<int> reverseLevelOrder(Node *root)
{
    //store right then left;
    if(!root)return {};
    queue<Node*>q;
    q.push(root);
    vector<int>res;
    while(!q.empty()){
        int level_size=q.size();
        while(level_size--){
            Node* temp=q.front();
            q.pop();
            res.push_back(temp->data);
            if(temp->right)q.push(temp->right);
            if(temp->left)q.push(temp->left);
        }
    }
     reverse(res.begin(),res.end());
     return res;
}

//Time Complexity -> O(n)
// Space Complexity -> O(n)