Problem Link ->https://practice.geeksforgeeks.org/problems/binary-tree-to-dll/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article


void solve(Node*root, Node* &head, Node* &prev ){
        if (root==NULL)return ;
        solve(root->left,head,prev);
        if(head==NULL){
            head=root;
            prev=root;
        }else{
            prev->right=root;
            root->left=prev;
            prev=root;            
        }
        solve(root->right,head,prev);
    }
    Node * bToDLL(Node *root)
    {
        Node*head=NULL;
        Node*prev=NULL;
        solve(root,head,prev);
        return head;
    }
    // Time Complexity -> O(N)
    // Space Complexity -> O(H)
    
    // Explanation -> left , Data (make pointers pointing left and right ot prev and next) , right
    //1. Start
    //2. if root is null reutrn 
    //3. Go to left
    //4.    if head is Null
    //5.        make  root is null
    //6.    else
    //7.        make pointer pointintg
    //8.        prev->right = root;
    //9.        root->left=prev
    //10.   make prev=root;
    //11. Go to right
    //12. End