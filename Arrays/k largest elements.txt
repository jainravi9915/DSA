// problem link -> https://practice.geeksforgeeks.org/batch/gts-1/track/GTS-ARRAY/problem/k-largest-elements4206
	

	vector<int> kLargest(int arr[], int n, int k) {
	    vector<int>res;
	    priority_queue<int,vector<int>,greater<int>>pq; //min heap
	    for(int i=0;i<n; i++){
	        pq.push(arr[i]);
	        if(pq.size()>k)pq.pop();
	    }
	    while(!pq.empty()){
	        res.push_back(pq.top());
	        pq.pop();
	    }
	    reverse(res.begin(),res.end());
	    return res;
	}
