Problem Link -> https://leetcode.com/problems/word-break/description/
     


   bool solve(string s, string curr, unordered_map<string,int>&st){
         if(s.size()==0)return true;
         for(int i=0; i<s.size(); i++){
             string  prefix=s.substr(0,i+1);// 0--i
             if(st[prefix]){
                 string suffix=s.substr(i+1);
                 if(solve(suffix,curr+prefix+" ",st)){
                     return true;
                 }
             }
         }
         return false;
    }
    bool wordBreak(string s, vector<string>& wordDict) {
        unordered_map<string,int>mp;
        for(string s:wordDict){
            mp[s]++;
        }
        string curr;
        return solve(s,curr,mp);
    }