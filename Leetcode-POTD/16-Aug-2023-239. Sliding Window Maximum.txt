Problem Link -> https://leetcode.com/problems/sliding-window-maximum/description/

    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n=nums.size();
        deque<int>q;
        vector<int>res;
        for(int i=0; i<k; i++){
            while(!q.empty() and nums[q.back()]<=nums[i]){
                q.pop_back();
            }
            q.push_back(i);
        }
        for(int i=k; i<n;i++){
            res.push_back(nums[q.front()]);
            // slide window
            while(!q.empty() and i-q.front()>=k)q.pop_front();
            while(!q.empty() and nums[q.back()]<=nums[i])q.pop_back();
            q.push_back(i);
        }
        res.push_back(nums[q.front()]);
        return res;   
    }
// Time Complexity -> O(N)
// Space Complexity -> O(N)